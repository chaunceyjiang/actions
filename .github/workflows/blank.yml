# This is a basic workflow to help you get started with Actions

name: k8s-arm64-sync

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0,10,20,30,40,50 * * * *'
    
jobs:
  armv7_job:
    # The host should always be Linux
    runs-on: ubuntu-18.04
    name: Build on ubuntu-18.04 armv7
    steps:
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            apt-get update -q -y
            apt-get install -q -y curl ca-certificates gnupg lsb-release
            KUBERNETES_RELEASE_VERSION="$(curl -sSL https://dl.k8s.io/release/stable.txt)"
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |  tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt-get update -q -y
            apt-get install -q -y  docker-ce docker-ce-cli containerd.io
            KUBERNETES_VERSION=${INPUT_KUBERNETES_VERSION:=${KUBERNETES_RELEASE_VERSION}}
            echo "currect version ${KUBERNETES_VERSION}"
            
            curl -O -L https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/arm64/kubeadm
            chmod +x kubeadm
            images=$(./kubeadm config images list --kubernetes-version=${KUBERNETES_VERSION})
            
            echo "image list: ${images}"
            
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin chaunceyjiang
            
            while IFS='/' read key value; do
                image=${key}/${value}
                docker pull ${image}
                if [[ "${value}" == "coredns/coredns"* ]]; then
                    value=${value/coredns\//""}
                fi
            
                new_image=chaunceyjiang/${value}

                docker tag ${image} ${new_image}
                docker push ${new_image}
            done <<< ${images}

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
